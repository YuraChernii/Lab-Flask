openapi: 3.0.1
info:
  title: Swagger admins
  description: This is a sample server student server.
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://studentmarks/v2
- url: http://studentmarks/v2
tags:
- name: student
  description: Operations about admins
paths:
  /student:
    put:
      tags:
      - student
      summary: Update an existing student
      operationId: updateStudent
      requestBody:
        description: Student object that needs to be added to the store
        content:
          application/json:
            schema:
              properties:
                  userName:
                    type: string
                  email:          # <-- image embedded into JSON
                    type: string
                    
                  phone:
                    type: number
                  password:          # <-- image embedded into JSON
                    type: string
        required: true
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Student not found
          content: {}
        405:
          description: Validation exception
          content: {}
      security:
      - adminstore_auth:
        - write:admins
        - read:admins
      x-codegen-request-body-name: body
    post:
      tags:
      - student
      summary: Add a new student
      operationId: addStudent
      requestBody:
        description: Student object that needs to be added
        content:
          application/json:
            schema:
              properties:
                  userName:
                    type: string
                  email:          # <-- image embedded into JSON
                    type: string
                    
                  phone:
                    type: number
                  password:          # <-- image embedded into JSON
                    type: string
                  
        required: true
      responses:
        200:
          description: successful operation
        405:
          description: Invalid input
          content: {}
      security:
      - adminstore_auth:
        - write:admins
        - read:admins
      x-codegen-request-body-name: body
  /student/{studentid}:
    get:
      tags:
      - student
      summary: Find student by ID
      description: Returns a single student
      operationId: getStudentById
      parameters:
      - name: studentid
        in: path
        description: ID of student to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:          # <-- image embedded into JSON
                    type: string
                    format: byte
                    description: Base64-encoded contents of the avatar image
                  averageMark:
                    type: string
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Student not found
          content: {}
      security:
      - api_key: []
    delete:
      tags:
      - student
      summary: Deletes a student
      operationId: deleteStudent
      parameters:
      
      - name: studentid
        in: path
        description: Student id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Student not found
          content: {}
      security:
      - adminstore_auth:
        - write:admins
        - read:admins
  /rating/{studentNmae}/{subjectName}:
    get:
      tags:
      - rating
      summary: Find marks by ID
      description: Returns a single student
      operationId: getMarksById
      parameters:
      - name: studentNmae
        in: path
        description: ID of student to return
        required: true
        schema:
          type: integer
          format: int64
      - name: subjectName
        in: path
        description: ID of student to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  mark:
                    type: integer
                  
        400:
          description: Invalid subjectName or studentNmae supplied 
          content: {}
        404:
          description: Student not found
          content: {}
      security:
      - api_key: []
  /rating:
    put:
      tags:
      - rating
      summary: Update an existing rating
      operationId: updateRating
      requestBody:
        description: Student object that needs to be added to the store
        content:
          application/json:
            schema:
              
                properties:
                  studentName:
                    type: string
                  subjectName:          # <-- image embedded into JSON
                    type: string
                    
                  mark:
                    type: integer
        required: true
      responses:
        200:
          description: successful operation
        
        404:
          description: Student not found
          content: {}
        405:
          description: Validation exception
          content: {}
      security:
      - adminstore_auth:
        - write:admins
        - read:admins
      x-codegen-request-body-name: body
    post:
      tags:
      - rating
      summary: Add a new rating
      operationId: addRatting
      requestBody:
        description: Student object that needs to be added
        content:
          application/json:
            schema:
              properties:
                  studentName:
                    type: string
                  subjectName:          # <-- image embedded into JSON
                    type: string
                    
                  mark:
                    type: integer
        required: true
      responses:
        200:
          description: successful operation
        405:
          description: Invalid input
          content: {}
      security:
      - adminstore_auth:
        - write:admins
        - read:admins
      x-codegen-request-body-name: body
  /rating/bestStudents/{numberOfStudent}:
    get:
      tags:
      - rating
      summary: Finds admins by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findadminsByStatus
      parameters:
      - name: numberOfStudent
        in: path
        description: amount of student to return rating
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    studentName:
                      type: string
                      example: Yura Chernii
                    averageRating:
                      type: integer
                      example: 5
        400:
          description: Invalid status value
          content: {}
      security:
      - adminstore_auth:
        - write:admins
        - read:admins
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        admin:
          type: boolean
        email:
          type: string
        phone:
          type: number
        password:
          type: string
          description: Info about student
      xml:
        name: Student
    
    Marks:
      type: object
      properties:
        studentId:
          type: integer
          format: int64
        subjectName:
          type: string
        rating:
          type: integer
          description: Rating of student
          format: int64
      xml:
        name: Student
  securitySchemes:
    adminstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://adminstore.swagger.io/oauth/dialog
          scopes:
            write:admins: modify students in your account
            read:admins: read your students
    api_key:
      type: apiKey
      name: api_key
      in: header
